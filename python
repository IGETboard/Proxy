import socket
import threading

def handle_client_request(client_socket):
    request = client_socket.recv(1024)
    
    # Parse the request to get the host and port
    host, port = parse_request(request)
    
    # Connect to the destination server
    destination_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    destination_socket.connect((host, port))
    
    # Forward the request to the destination server
    destination_socket.send(request)
    
    # Receive the response from the destination server
    while True:
        data = destination_socket.recv(4096)
        if len(data) > 0:
            client_socket.send(data)
        else:
            break
    
    # Close the sockets
    destination_socket.close()
    client_socket.close()

def start_proxy_server():
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind(('127.0.0.1', 8888))
    server.listen(10)
    
    while True:
        client_socket, addr = server.accept()
        client_handler = threading.Thread(target=handle_client_request, args=(client_socket,))
        client_handler.start()

if __name__ == "__main__":
    start_proxy_server()
